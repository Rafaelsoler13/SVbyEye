% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/crunchPaf.R
\name{crunchPaf}
\alias{crunchPaf}
\title{Read PAF alignments from a file and apply a set of post-processing steps.}
\usage{
crunchPaf(
  paf.file = NULL,
  min.align.len = 1000,
  min.selfaln.dist = 10000,
  min.deletion.size = 1000,
  min.insertion.size = 1000,
  break.paf.aln = TRUE,
  bin.paf.aln = FALSE,
  binsize = 10000
)
}
\arguments{
\item{paf.file}{A path to a PAF file containing alignments to be loaded.}

\item{min.align.len}{Filter our PAF alignemnt smaller than this size.}

\item{min.selfaln.dist}{Keep alignment pairs with this or larger distance from each other (Applied only to FASTA self-alignments).}

\item{min.deletion.size}{A minimum size (in base pairs) of a deletion to be retained.}

\item{min.insertion.size}{A minimum size (in base pairs) of an insertion to be retained.}

\item{break.paf.aln}{Set to \code{TRUE} in order to split CIGAR string at insertions and deletions.}

\item{bin.paf.aln}{Set to \code{TRUE} in order to bin each alignment into bins defined in 'binsize' parameter.}

\item{binsize}{A user defined binsize (in bp) to split each PAF alignment into.}
}
\value{
A \code{list} of \code{tibble} objects storing matched ('M') alignments as well as structurally variable ('SV') regions.
}
\description{
This function takes an PAF output file (e.g. minimap2 output) and loads the file and applies 
desired CIGAR operations and filtering steps.
}
\author{
David Porubsky
}
